//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : casino project
//  @ File Name : GetPlayerCardRequest.java
//  @ Date : 6/7/2012
//  @ Author : khoatd
//
//  @ Desc: Request to get card from the previous player



package casino.cardgame.message.request.admin;

import casino.cardgame.entity.UserInfo;
import casino.cardgame.entity.game.TournamentEntity;
import casino.cardgame.game_enum.TournamentStatus;
import casino.cardgame.message.request.SFSGameRequest;
import com.smartfoxserver.v2.entities.data.ISFSObject;
import java.util.Calendar;
import java.util.Date;
import java.util.Formatter;
import java.util.Timer;


public class CreateTournamentRequest extends casino.cardgame.message.request.SFSGameRequest {
    
    private TournamentEntity _tournament;
    
    @Override
    public SFSGameRequest FromSFSObject(ISFSObject isfso) {
        String name = isfso.getUtfString("name");
        String displayName = isfso.getUtfString("display_name");
        double fee = isfso.getDouble("fee");
        double startingChip = isfso.getDouble("starting_chip");
        int capacity = isfso.getDouble("capacity").intValue();
        int levelType = isfso.getDouble("level_type").intValue();
        int beginLevel = isfso.getDouble("begin_level").intValue();
        int endLevel = isfso.getDouble("end_level").intValue();
        double firstPrize = isfso.getDouble("frist_prize");
        double secondPrize = isfso.getDouble("second_prize");
        double thirdPrize = isfso.getDouble("third_prize");
        
        _tournament  = new TournamentEntity();
        _tournament.setName(name);
        _tournament.setDisplayName(displayName);
        _tournament.setCapacity(capacity);
        _tournament.setFee(fee);
        _tournament.setLevelType(levelType);
        _tournament.setBeginLevel(beginLevel);
        _tournament.setEndLevel(endLevel);
        _tournament.setStartingChip(startingChip);
        _tournament.setFirstPrize(firstPrize);
        _tournament.setSecondPrize(secondPrize);
        _tournament.setThirdPrize(thirdPrize);
        _tournament.setStatus(TournamentStatus.STOPPING);
                
        return this;
    }

    @Override
    public String GetRequestName() {
        return ADMIN_REQUEST_NAME.CREATE_TOUR_REQ;
    }

    public TournamentEntity getTournament() {
        return _tournament;
    }

}
